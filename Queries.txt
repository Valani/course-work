//Simple query

1. SELECT Users.username as name, Users.mail, Comments.text FROM Comments, Users 
			WHERE LENGTH(text) BETWEEN 10 and 50 and Users.mail LIKE '%@gmail.com' and Comments.sender_id = Users.id 
			ORDER BY Comments.date_created;

2. SELECT Courses.title, Courses.level, Courses.rating, Comments.text FROM Courses, Comments
			WHERE `rating` > 9 and Comments.`course_id` = Courses.`id`
      ORDER BY Courses.created

3. SELECT count(*) as 'Count courses', min(Courses.rating), max(Courses.rating) FROM Courses

4. SELECT title, level, rating FROM Courses
		WHERE level LIKE 'Beginner' and rating > 5
		ORDER BY created DESC;

5. SELECT Authors.name, Authors.rating as 'University Rating', Courses.title as 'Name of courses ', Courses.rating as 'Courses rating' FROM Authors, Courses 
	WHERE Authors.rating > 5 and Authors.id = Courses.owner_id 
	ORDER BY `Authors`.`rating` DESC, Courses.rating DESC 

// Query with Subquery

1.SELECT title,description,rating FROM courses
WHERE
    rating = (SELECT MAX(rating) FROM courses);

2. SELECT title description, rating FROM courses
		WHERE rating > (SELECT AVG(rating) FROM courses)

3. Select title FROM courses
		WHERE id NOT IN( SELECT course_id FROM coursesstudents)

4. SELECT 
	Subjects.title,
    (SELECT 
     	AVG(Courses.rating) 
		FROM 
     		Courses 
     	WHERE 
     		Courses.subject_id = Subjects.id) 
FROM 
	Subjects

5. SELECT 
	Users.username, 
		(SELECT 
			count(*) 
		FROM 
			Comments 
		WHERE 
			Comments.sender_id = Users.id) 
			as Comments 
FROM Users
ORDER BY Comments DESC


// Query with JOIN

1. SELECT Courses.title as 'Most popularity courses', S.title as 'Subject' FROM Courses
RIGHT JOIN Subjects as S on Courses.subject_id = S.id
ORDER BY Courses.rating DESC
LIMIT 10;

2 SELECT Users.username, C.text, C.date_created FROM Users
JOIN Comments as C on Users.id = C.sender_id
ORDER BY C.date_created

3. SELECT Courses.title, A.name, Courses.level FROm Courses
LEFT JOIN Authors as A on A.id = Courses.owner_id
WHERE Courses.level = 'Beginner';

4. SELECT CourseContent.name_content, C.title FROM CourseContent
RIGHT JOIN Courses as C on C.id = CourseContent.course_id
WHERE CourseContent.name_content LIKE '%book%'

5. SELECT Courses.title AS `Name course`,  Users.username AS `Name Student`
FROM `courses` 
	INNER JOIN Coursesstudents ON Coursesstudents.course_id = Courses.id
	LEFT JOIN Students ON Coursesstudents.student_id = Students.id
	LEFT JOIN Users ON Students.user_id = Users.id

// Query using Procedure
1. CALL GetStudentCourses('Robertos')

CREATE PROCEDURE GetStudentCourses(
	IN student VARCHAR(50) 
)
BEGIN
	SELECT  
		U.username AS Name, 
		C.title AS Title 
    FROM CoursesStudents AS CS
    JOIN Courses AS C on C.id = CS.course_id 
    JOIN Students AS S on S.id = CS.student_id
    JOIN Users AS U on U.id = S.user_id
    WHERE U.username = student; 
END //

DELIMITER ;		

2. CALL GetUserComments('And54w');

DELIMITER //

CREATE PROCEDURE GetUserComments(
	IN user VARCHAR(50) 
)
BEGIN
	SELECT  
		U.*,  
		C.text AS Text 
    FROM Comments  AS C
    JOIN Users AS U on U.id = C.sender_id
    WHERE U.username = user; 
END //
